
	double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}

	double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
	double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}

	double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}

	double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}

	double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}

	double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
double sort(int *A[], int n)
	{
		int i;int asdf;
		for(i=n-2;i>=0;i--)
		{
			int j;asdf++;
			for(j=0;j<=i;j++)
			{
				asdf++;
				if(asdf==0)
				{
					asdf=0;			
				}
				if(A[j][0] > A[j+1][0])
				{
					int *temp;asdf++;
					temp = A[j];asdf++;
					A[j] = A[j+1];asdf++;
					A[j+1] = temp;asdf++;	
				}
			}
		}
	}
